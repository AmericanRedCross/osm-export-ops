---
#
# users and groups
#
users_and_groups:
  - user_name: osmexport
    group_name: dev
app_user: "{{ users_and_groups[0] }}"
admin_email: gregcorradini@gmail.com

#
# osm_export_tool
#
#project_home: "/home/{{ app_user.user_name }}/dev"
project_home: "/usr/local/src/dev"
#virtualenv_dir: "{{ project_home }}/hotosm"
git_repo_url: https://github.com/ranchodeluxe/osm-export-tool2.git
repo_name: "osm-export-tool2"
requirements_file: "{{ project_home }}/{{ repo_name }}/requirements-dev.txt"

#
# postgres
#
db_name: hot_exports_dev
db_user: "{{ app_user.user_name }}_pg"
db_password: password
pg_admin_user: 'postgres'
pg_default_auth_method: 'trust'
pg_cfg_pg_hba_default:
  - { type: local, database: all, user: '{{ pg_admin_user }}', address: '', method: '{{ pg_default_auth_method }}', comment: '' }
  - { type: local, database: all, user: all, address: '',             method: '{{ pg_default_auth_method }}', comment: '"local" is for Unix domain socket connections only' }
  - { type: host,  database: all, user: all, address: '127.0.0.1/32', method: '{{ pg_default_auth_method }}', comment: 'IPv4 local connections:' }
  - { type: host,  database: all, user: all, address: '10.0.2.2/32', method: '{{ pg_default_auth_method }}', comment: 'IPv4 local connections:' }
  - { type: host,  database: all, user: all, address: '::1/128',      method: '{{ pg_default_auth_method }}', comment: 'IPv6 local connections:' }
pg_cfg_pg_hba_passwd_hosts: []
pg_cfg_pg_hba_trust_hosts: []
pg_cfg_pg_hba_custom: []

#
# thirdparty installs for OSM and Garmin interaction
#
thirdparty_dir: /usr/local/src
thirdparty_zipfiles:
  - url: http://download.osmand.net/latest-night-build/OsmAndMapCreator-main.zip
    exdir: "{{ thirdparty_dir }}/osmandmapcreator"
  - url: http://www.mkgmap.org.uk/download/mkgmap-r3672.zip
    exdir: "{{ thirdparty_dir }}/mkgmap"
  - url: http://www.mkgmap.org.uk/download/splitter-r435.zip
    exdir: "{{ thirdparty_dir }}/splitter"
osmandmapcreator_dir: "{{ thirdparty_zipfiles[1].exdir }}"
mkgmap_dir: "{{ thirdparty_zipfiles[1].exdir }}/{{ thirdparty_zipfiles[1].url | basename | regex_replace('.zip', '') }}"
splitter_dir: "{{ thirdparty_zipfiles[2].exdir }}/{{ thirdparty_zipfiles[2].url | basename | regex_replace('.zip', '') }}"

#
# rabbitmq, celery and flower
#
rabbitmq_user: "{{ app_user.user_name }}_rabbitmq"
rabbitmq_pass: "{{ db_password }}"
flower_user: "{{ app_user.user_name }}_flower"
celery_user: "{{ app_user.user_name }}"
celery_group: "{{ app_user.group_name }}"
celery_chdir: "{{ project_home }}/{{ repo_name }}"

#
# export folders and settings.py
#
exports_dir: /usr/local/src/exports
exports_staging_dir: "{{ exports_dir }}/staging/"
exports_media_dir: "{{ exports_dir }}/media/"
exports_download_dir: "{{ exports_dir }}/download/"
settings_dest: "{{ project_home }}/{{ repo_name }}/core/settings/dev_{{ app_user.user_name }}.py"
garmin_xml_dest: "{{ project_home }}/{{ repo_name }}/utils/conf/garmin_config.xml"

#
# overpass api
#
overpass_api_dir: "{{ thirdparty_dir }}/overpassapi"
overpass_api_url: http://0.0.0.0:80/cgi-bin/interpreter
overpass_latest_tar: http://dev.overpass-api.de/releases/osm-3s_v0.7.52.tar.gz
# $EXEC_DIR: the root directory in which executable files should be installed (/bin/ suffix removed)
overpass_exec_dir: "{{ overpass_api_dir }}/exec" # move
# $DB_DIR: a directory to store the database
overpass_db_dir: "{{ overpass_api_dir }}/db" # move
# $PLANET_FILE: a place for the compressed (bzip) OSM planet/extract file (up to 10 GB)
overpass_planet_dir: "{{ overpass_api_dir }}/planetfile" # move
# $REPLICATE_DIR: a directory to store minutely (or otherwise) diffs (only necessary if you decide to configure minutely updates below)
overpass_replicate_dir: "{{ overpass_api_dir }}/replicate" # move
planet_osm_download_url: http://download.geofabrik.de/south-america/suriname-latest.osm.pbf
planet_filename: "{{ planet_osm_download_url | basename }}" # move